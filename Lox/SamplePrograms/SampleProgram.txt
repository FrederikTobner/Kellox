class Doughnut 
{
  init(parentColor)
  {
	this.parentColor = parentColor;
  }
  cook() 
  {
    print "Fry until " + this.parentColor;
  }
}

class BostonCream < Doughnut 
{
	init(color, parentColor)
	{
		super.init(parentColor);
		this.color = color;		
	}
	cook()
	{
		super.cook();
		print "Pipe full of custard and coat with " + this.color + " chocolate.";
	}
}

BostonCream("dark", "golden brown").cook();

class LoxKlasse < Doughnut
{
	init(x, y, parentColor)
	{
		super.init(parentColor);
		this.x = x;
		this.y = y;
	}
}

print LoxKlasse(4, 3, "green");

class Rect
{
	init(x, y)
	{
		this.x = x;
		this.y = y;
	}
	area()
	{
		return this.x * this.y * 0.5;
	}
}

print Rect(6, 5).area();

fun fibonacci()
{	
	var x = 0;
	var temp = 0;
	var b = 1;
	fun number()
	{
		temp = x;
		x = b;
		b = temp + x;
		return temp;
	}
	return number;
}

fun makeCounter() 
{
	var i = 0;
	fun count() 
	{
		return i++;
	}
	return count;
}

var counter = makeCounter();
print counter(); // "1".
print counter(); // "2"

print random(1, 5);

var zahl = 7;
print zahl;
zahl += 5;
print zahl;
zahl += 5;
print zahl;
zahl += 5;
print zahl;

// prints the first 25 fibonacci numbers
var fibo = fibonacci();
for (var i = 0; i < 25; i++) 
{
	print fibo();
}

fun Add(x, y)
{
	return x + y;
}

print Add(123456, 654321);

fun Countdown(x)
{
	if(x >= 0)
	{
		print x;
		Countdown(x--);
	}
}

Countdown(10);

/* Hallo 
ein Blockkommentar geht ï¿½ber mehrere Zeilen
*/
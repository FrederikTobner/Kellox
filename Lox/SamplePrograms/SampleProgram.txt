class Doughnut {
  init(color)
  {
  this.color = color;
  }
  cook() 
  {
    print "Fry until " + this.color;
  }
}

class BostonCream < Doughnut {
	init(color)
	{
	super.init(color);
	}
	cook()
	{
		super.cook();
		print "Pipe full of custard and coat with chocolate.";
	}
}

BostonCream("golden brown").cook();

class LoxKlasse{
	Method()
	{
		return this;
	}
}

print LoxKlasse().Method();

class Rect{
	init(x, y)
	{
		this.x = x;
		this.y = y;
	}
	area()
	{
		return this.x * this.y * 0.5;
	}
}

print Rect(6, 5).area();

fun fibonacci()
{	
	var x = 0;
	var temp = 0;
	var b = 1;
	fun number()
	{
		temp = x;
		x = b;
		b = temp + x;
		return temp;
	}
	return number;
}

fun makeCounter() 
{
	var i = 0;
	fun count() 
	{
		return i = i + 1;
	}
	return count;
}

var counter = makeCounter();
print counter(); // "1".
print counter(); // "2"

var o = random(1, 5);
var test = "hi";
print o;
print test;


// prints the first 25 fibonacci numbers
var fibo = fibonacci();
for (var i = 0; i < 25; i = i + 1) 
{
	print fibo();
}

fun Add(x, y)
{
	return x + y;
}

fun Countdown(x)
{
	if(x > -1)
	{
		print x;
		Countdown(x = x - 1);
	}
}

print Add(fibo(), fibo());

print test;

Countdown(10);